# Example configuration for AI Code Review System with Java 21
# Copy this to application.yml and customize for your needs

spring:
  profiles:
    active: dev
  # Java 21 Virtual Threads support
  threads:
    virtual:
      enabled: true
  # Database Configuration
  datasource:
    url: ${DB_URL:jdbc:h2:mem:testdb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    driver-class-name: org.h2.Driver
  
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:create-drop}
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  h2:
    console:
      enabled: true

# AI Service Configuration
ai:
  mcp:
    url: ${AI_SERVICE_URL:http://localhost:8080}
    timeout: ${AI_TIMEOUT:30000}
    retries: 3
    api-key: ${AI_API_KEY:your-api-key-here}

# Review Configuration
review:
  # Score thresholds for automatic decisions
  thresholds:
    auto-approve-score: 80        # Auto-approve if score >= 80
    auto-reject-score: 30         # Auto-reject if score < 30
    max-method-length: 25         # Max lines per method
    max-class-length: 300         # Max lines per class
    max-parameters: 5             # Max parameters per method
    critical-findings-threshold: 0 # Max critical findings allowed
    high-findings-threshold: 3    # Max high severity findings allowed

  # Rule configuration
  rules:
    # Enable/disable rule categories
    enable-clean-code: true
    enable-solid: true
    enable-ddd: true
    enable-security: true
    enable-performance: true
    
    # Disable specific rules
    disabled:
      - "ARCH_MAGIC_NUMBER"      # Disable magic number detection
      - "ARCH_FIELD_INJECTION"   # Allow field injection
    
    # Override rule severities
    severity:
      "ARCH_LONG_METHOD": "HIGH"          # Make long methods high severity
      "ARCH_HARDCODED_SECRET": "CRITICAL" # Ensure secrets are critical
      "ARCH_SQL_INJECTION": "CRITICAL"    # Ensure SQL injection is critical

  # File patterns and filtering
  patterns:
    # Files to ignore completely
    ignore-files:
      - "*.test.js"
      - "*Test.java"
      - "*.spec.ts"
      - "**/test/**"
      - "**/tests/**"
      - "**/*Test.java"
      - "**/*Tests.java"
      - "**/generated/**"
    
    # Files requiring stricter review (security/payment related)
    critical-files:
      - "*Security*.java"
      - "*Auth*.java"
      - "*Payment*.java"
      - "*Billing*.java"
      - "*Crypto*.java"
      - "*Password*.java"
      - "*Token*.java"
    
    # Whitelist patterns
    whitelist:
      # Allowed magic numbers (common constants)
      magic-numbers:
        - "0"
        - "1"
        - "-1"
        - "2"
        - "10"
        - "100"
        - "1000"
        - "24"     # hours
        - "60"     # minutes/seconds
        - "365"    # days
        - "7"      # days in week
        - "12"     # months
      
      # Allowed secret-like strings (test/development)
      allowed-secrets:
        - "test"
        - "localhost"
        - "example"
        - "demo"
        - "sample"
        - "placeholder"
        - "changeme"
        - "password"   # Obviously test passwords
      
      # Files to skip security checks
      skip-security-checks:
        - "**/test/**"
        - "**/*Test.java"
        - "**/examples/**"
        - "**/samples/**"

  # Team-specific configurations
  teams:
    team-configs:
      # Backend team - stricter rules
      backend:
        name: "Backend Team"
        members:
          - "backend-dev-1"
          - "backend-dev-2"
          - "senior-backend"
        strict-mode: true
        custom-thresholds:
          auto-approve-score: 85
          max-method-length: 20
          max-class-length: 250
        additional-rules:
          - "ARCH_REPOSITORY_PATTERN"
          - "ARCH_SERVICE_LAYER"
      
      # Frontend team - focus on performance
      frontend:
        name: "Frontend Team"
        members:
          - "frontend-dev-1"
          - "frontend-dev-2"
          - "ui-specialist"
        strict-mode: false
        custom-thresholds:
          auto-approve-score: 75
          max-method-length: 30
        additional-rules:
          - "ARCH_COMPONENT_SIZE"
          - "ARCH_PROP_VALIDATION"
      
      # Security team - maximum scrutiny
      security:
        name: "Security Team"
        members:
          - "security-expert"
          - "compliance-officer"
        strict-mode: true
        custom-thresholds:
          auto-approve-score: 90
          critical-findings-threshold: 0
          high-findings-threshold: 1
        additional-rules:
          - "ARCH_CRYPTO_VALIDATION"
          - "ARCH_INPUT_SANITIZATION"

# GitHub Integration
github:
  token: ${GITHUB_TOKEN:your-github-token}
  webhook-secret: ${GITHUB_WEBHOOK_SECRET:your-webhook-secret}
  
# Database Configuration merged into main spring section above
#spring:
#  datasource:
#    url: ${DB_URL:jdbc:postgresql://localhost:5432/reviewdb}
#    username: ${DB_USERNAME:review_user}
#    password: ${DB_PASSWORD:review_password}
#    driver-class-name: org.postgresql.Driver
#  
#  jpa:
#    hibernate:
#      ddl-auto: ${DDL_AUTO:validate}
#    show-sql: ${SHOW_SQL:false}
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true

# Logging Configuration
logging:
  level:
    com.reviewcode.ai: ${LOG_LEVEL:INFO}
    com.reviewcode.ai.service.ArchitectureValidationService: DEBUG
    org.springframework.web.reactive: ${WEB_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/code-review.log}

# Actuator/Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Java 21 specific configurations
java21:
  features:
    virtual-threads: true
    structured-concurrency: true
    pattern-matching: true
    string-templates: false  # Preview feature
  performance:
    zgc-enabled: true
    large-pages: true
    string-deduplication: true

# Application Info
info:
  app:
    name: "AI Code Review System"
    version: "@project.version@"
    description: "Automated code review with AI assistance and Java 21 optimizations"
    java-version: "21"
    team: "Development Tools Team"
    features:
      - "Virtual Threads for high concurrency"
      - "ZGC for low-latency garbage collection"
      - "Enhanced pattern matching"
      - "Structured concurrency support"