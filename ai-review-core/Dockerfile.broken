# Multi-stage build for optimal image size
FROM maven:3.9.8-eclipse-temurin-21 AS build

# Set working directory
WORKDIR /app

# Copy POM file for dependency resolution
COPY ai-review-core/pom.xml ./pom.xml

# Update POM to be standalone (remove parent reference)
RUN sed -i '/<parent>/,/<\/parent>/d' pom.xml && \
    sed -i 's/<artifactId>ai-review-core<\/artifactId>/<artifactId>ai-review-core<\/artifactId>\n    <groupId>com.reviewcode<\/groupId>\n    <version>1.0.0<\/version>/' pom.xml && \
    sed -i '/<dependencies>/i\    <parent>\n        <groupId>org.springframework.boot<\/groupId>\n        <artifactId>spring-boot-starter-parent<\/artifactId>\n        <version>3.3.5<\/version>\n        <relativePath\/>\n    <\/parent>\n\n    <properties>\n        <java.version>21<\/java.version>\n        <maven.compiler.source>21<\/maven.compiler.source>\n        <maven.compiler.target>21<\/maven.compiler.target>\n        <maven.compiler.release>21<\/maven.compiler.release>\n        <project.build.sourceEncoding>UTF-8<\/project.build.sourceEncoding>\n    <\/properties>\n' pom.xml && \
    sed -i '/<\/project>/i\    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot<\/groupId>\n                <artifactId>spring-boot-maven-plugin<\/artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>\n                            <groupId>org.projectlombok<\/groupId>\n                            <artifactId>lombok<\/artifactId>\n                        <\/exclude>\n                    <\/excludes>\n                <\/configuration>\n            <\/plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins<\/groupId>\n                <artifactId>maven-compiler-plugin<\/artifactId>\n                <version>3.11.0<\/version>\n                <configuration>\n                    <source>21<\/source>\n                    <target>21<\/target>\n                    <release>21<\/release>\n                    <compilerArgs>\n                        <arg>--enable-preview<\/arg>\n                    <\/compilerArgs>\n                <\/configuration>\n            <\/plugin>\n        <\/plugins>\n    <\/build>' pom.xml

# Download dependencies
RUN mvn dependency:go-offline -B

# Copy source code and configuration files
COPY ai-review-core/src ./src
COPY ai-review-core/custom-pmd-rules.xml ./
COPY ai-review-core/checkstyle.xml ./
COPY ai-review-core/spotbugs-exclude.xml ./

# Build the application
RUN mvn clean package -DskipTests -Dmaven.test.skip=true

# Runtime stage
FROM eclipse-temurin:21-jre-alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user for security
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy the built JAR from build stage
COPY --from=build /app/target/*.jar app.jar

# Copy configuration files
COPY --from=build /app/custom-pmd-rules.xml ./
COPY --from=build /app/checkstyle.xml ./

# Change ownership of the app directory
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# Set JVM options for containerized environment with Java 21 optimizations
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseZGC -XX:+UseStringDeduplication -XX:+OptimizeStringConcat --enable-preview"

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]